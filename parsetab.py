
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSNAME NUMBER EQUAL PLUS MINUS TIMES DIVIDE LPAREN RPARENstatement : NAME EQUAL expressionstatement : expressionexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,7,8,9,10,11,],[2,13,13,13,13,13,13,13,]),'LPAREN':([0,4,5,7,8,9,10,11,],[5,5,5,5,5,5,5,5,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,],[4,-10,9,4,4,-9,4,4,4,4,4,-8,-10,9,9,-3,-4,-5,-6,-7,]),'NUMBER':([0,4,5,7,8,9,10,11,],[6,6,6,6,6,6,6,6,]),'$end':([1,2,3,6,12,13,15,16,17,18,19,20,],[0,-10,-2,-9,-8,-10,-1,-3,-4,-5,-6,-7,]),'EQUAL':([2,],[7,]),'PLUS':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,8,-9,-8,-10,8,8,-3,-4,-5,-6,-7,]),'TIMES':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,10,-9,-8,-10,10,10,10,10,-5,-6,-7,]),'DIVIDE':([2,3,6,12,13,14,15,16,17,18,19,20,],[-10,11,-9,-8,-10,11,11,11,11,-5,-6,-7,]),'RPAREN':([6,12,13,14,16,17,18,19,20,],[-9,-8,-10,20,-3,-4,-5,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,7,8,9,10,11,],[3,12,14,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUAL expression','statement',3,'p_statement_assign','calc.py',66),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',71),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',84),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',85),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',86),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',87),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',93),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',98),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',103),
  ('expression -> NAME','expression',1,'p_exression_name','calc.py',108),
]
