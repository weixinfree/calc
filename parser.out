Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUAL expression
Rule 2     statement -> expression
Rule 3     expression -> LPAREN expression RPAREN
Rule 4     expression -> NAME LPAREN expression COMMA expression RPAREN
Rule 5     expression -> NAME LPAREN expression RPAREN
Rule 6     expression -> expression POWER expression
Rule 7     expression -> expression PLUS expression
Rule 8     expression -> expression MINUS expression
Rule 9     expression -> expression TIMES expression
Rule 10    expression -> expression DIVIDE expression
Rule 11    expression -> MINUS expression
Rule 12    expression -> NUMBER
Rule 13    expression -> NAME

Terminals, with rules where they appear

COMMA                : 4
DIVIDE               : 10
EQUAL                : 1
LPAREN               : 3 4 5
MINUS                : 8 11
NAME                 : 1 4 5 13
NUMBER               : 12
PLUS                 : 7
POWER                : 6
RPAREN               : 3 4 5
TIMES                : 9
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 4 4 5 6 6 7 7 8 8 9 9 10 10 11
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUAL expression
    (2) statement -> . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    NAME            shift and go to state 2
    LPAREN          shift and go to state 4
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUAL expression
    (4) expression -> NAME . LPAREN expression COMMA expression RPAREN
    (5) expression -> NAME . LPAREN expression RPAREN
    (13) expression -> NAME .

    EQUAL           shift and go to state 7
    LPAREN          shift and go to state 8
    POWER           reduce using rule 13 (expression -> NAME .)
    PLUS            reduce using rule 13 (expression -> NAME .)
    MINUS           reduce using rule 13 (expression -> NAME .)
    TIMES           reduce using rule 13 (expression -> NAME .)
    DIVIDE          reduce using rule 13 (expression -> NAME .)
    $end            reduce using rule 13 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    $end            reduce using rule 2 (statement -> expression .)
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 4

    (3) expression -> LPAREN . expression RPAREN
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 14

state 5

    (11) expression -> MINUS . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 16

state 6

    (12) expression -> NUMBER .

    POWER           reduce using rule 12 (expression -> NUMBER .)
    PLUS            reduce using rule 12 (expression -> NUMBER .)
    MINUS           reduce using rule 12 (expression -> NUMBER .)
    TIMES           reduce using rule 12 (expression -> NUMBER .)
    DIVIDE          reduce using rule 12 (expression -> NUMBER .)
    $end            reduce using rule 12 (expression -> NUMBER .)
    RPAREN          reduce using rule 12 (expression -> NUMBER .)
    COMMA           reduce using rule 12 (expression -> NUMBER .)


state 7

    (1) statement -> NAME EQUAL . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 17

state 8

    (4) expression -> NAME LPAREN . expression COMMA expression RPAREN
    (5) expression -> NAME LPAREN . expression RPAREN
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 18

state 9

    (6) expression -> expression POWER . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 19

state 10

    (7) expression -> expression PLUS . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 20

state 11

    (8) expression -> expression MINUS . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 21

state 12

    (9) expression -> expression TIMES . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 22

state 13

    (10) expression -> expression DIVIDE . expression
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 23

state 14

    (3) expression -> LPAREN expression . RPAREN
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 24
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 15

    (4) expression -> NAME . LPAREN expression COMMA expression RPAREN
    (5) expression -> NAME . LPAREN expression RPAREN
    (13) expression -> NAME .

    LPAREN          shift and go to state 8
    RPAREN          reduce using rule 13 (expression -> NAME .)
    POWER           reduce using rule 13 (expression -> NAME .)
    PLUS            reduce using rule 13 (expression -> NAME .)
    MINUS           reduce using rule 13 (expression -> NAME .)
    TIMES           reduce using rule 13 (expression -> NAME .)
    DIVIDE          reduce using rule 13 (expression -> NAME .)
    $end            reduce using rule 13 (expression -> NAME .)
    COMMA           reduce using rule 13 (expression -> NAME .)


state 16

    (11) expression -> MINUS expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    POWER           reduce using rule 11 (expression -> MINUS expression .)
    PLUS            reduce using rule 11 (expression -> MINUS expression .)
    MINUS           reduce using rule 11 (expression -> MINUS expression .)
    TIMES           reduce using rule 11 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 11 (expression -> MINUS expression .)
    $end            reduce using rule 11 (expression -> MINUS expression .)
    RPAREN          reduce using rule 11 (expression -> MINUS expression .)
    COMMA           reduce using rule 11 (expression -> MINUS expression .)

  ! POWER           [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 13 ]


state 17

    (1) statement -> NAME EQUAL expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    $end            reduce using rule 1 (statement -> NAME EQUAL expression .)
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 18

    (4) expression -> NAME LPAREN expression . COMMA expression RPAREN
    (5) expression -> NAME LPAREN expression . RPAREN
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    COMMA           shift and go to state 25
    RPAREN          shift and go to state 26
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 19

    (6) expression -> expression POWER expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    $end            reduce using rule 6 (expression -> expression POWER expression .)
    RPAREN          reduce using rule 6 (expression -> expression POWER expression .)
    COMMA           reduce using rule 6 (expression -> expression POWER expression .)
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! POWER           [ reduce using rule 6 (expression -> expression POWER expression .) ]
  ! PLUS            [ reduce using rule 6 (expression -> expression POWER expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression POWER expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression POWER expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression POWER expression .) ]


state 20

    (7) expression -> expression PLUS expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    POWER           reduce using rule 7 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 7 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 7 (expression -> expression PLUS expression .)
    $end            reduce using rule 7 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 7 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 7 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! TIMES           [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression PLUS expression .) ]
  ! POWER           [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]


state 21

    (8) expression -> expression MINUS expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    POWER           reduce using rule 8 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 8 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 8 (expression -> expression MINUS expression .)
    $end            reduce using rule 8 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 8 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13

  ! TIMES           [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression MINUS expression .) ]
  ! POWER           [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]


state 22

    (9) expression -> expression TIMES expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    POWER           reduce using rule 9 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 9 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 9 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 9 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 9 (expression -> expression TIMES expression .)
    $end            reduce using rule 9 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 9 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 9 (expression -> expression TIMES expression .)

  ! POWER           [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 13 ]


state 23

    (10) expression -> expression DIVIDE expression .
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    POWER           reduce using rule 10 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 10 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 10 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 10 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 10 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 10 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 10 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 10 (expression -> expression DIVIDE expression .)

  ! POWER           [ shift and go to state 9 ]
  ! PLUS            [ shift and go to state 10 ]
  ! MINUS           [ shift and go to state 11 ]
  ! TIMES           [ shift and go to state 12 ]
  ! DIVIDE          [ shift and go to state 13 ]


state 24

    (3) expression -> LPAREN expression RPAREN .

    POWER           reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 3 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 3 (expression -> LPAREN expression RPAREN .)


state 25

    (4) expression -> NAME LPAREN expression COMMA . expression RPAREN
    (3) expression -> . LPAREN expression RPAREN
    (4) expression -> . NAME LPAREN expression COMMA expression RPAREN
    (5) expression -> . NAME LPAREN expression RPAREN
    (6) expression -> . expression POWER expression
    (7) expression -> . expression PLUS expression
    (8) expression -> . expression MINUS expression
    (9) expression -> . expression TIMES expression
    (10) expression -> . expression DIVIDE expression
    (11) expression -> . MINUS expression
    (12) expression -> . NUMBER
    (13) expression -> . NAME

    LPAREN          shift and go to state 4
    NAME            shift and go to state 15
    MINUS           shift and go to state 5
    NUMBER          shift and go to state 6

    expression                     shift and go to state 27

state 26

    (5) expression -> NAME LPAREN expression RPAREN .

    POWER           reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    PLUS            reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    MINUS           reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    TIMES           reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    $end            reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    RPAREN          reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)
    COMMA           reduce using rule 5 (expression -> NAME LPAREN expression RPAREN .)


state 27

    (4) expression -> NAME LPAREN expression COMMA expression . RPAREN
    (6) expression -> expression . POWER expression
    (7) expression -> expression . PLUS expression
    (8) expression -> expression . MINUS expression
    (9) expression -> expression . TIMES expression
    (10) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 28
    POWER           shift and go to state 9
    PLUS            shift and go to state 10
    MINUS           shift and go to state 11
    TIMES           shift and go to state 12
    DIVIDE          shift and go to state 13


state 28

    (4) expression -> NAME LPAREN expression COMMA expression RPAREN .

    POWER           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    TIMES           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    DIVIDE          reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 4 (expression -> NAME LPAREN expression COMMA expression RPAREN .)

